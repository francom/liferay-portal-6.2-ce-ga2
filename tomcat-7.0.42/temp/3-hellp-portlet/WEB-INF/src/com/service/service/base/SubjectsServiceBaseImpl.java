/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.service.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.service.model.Subjects;

import com.service.service.SubjectsService;
import com.service.service.persistence.AcademicYearPersistence;
import com.service.service.persistence.StudentsPersistence;
import com.service.service.persistence.SubjectsPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the subjects remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.service.service.impl.SubjectsServiceImpl}.
 * </p>
 *
 * @author Tofu
 * @see com.service.service.impl.SubjectsServiceImpl
 * @see com.service.service.SubjectsServiceUtil
 * @generated
 */
public abstract class SubjectsServiceBaseImpl extends BaseServiceImpl
	implements SubjectsService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.service.service.SubjectsServiceUtil} to access the subjects remote service.
	 */

	/**
	 * Returns the academic year local service.
	 *
	 * @return the academic year local service
	 */
	public com.service.service.AcademicYearLocalService getAcademicYearLocalService() {
		return academicYearLocalService;
	}

	/**
	 * Sets the academic year local service.
	 *
	 * @param academicYearLocalService the academic year local service
	 */
	public void setAcademicYearLocalService(
		com.service.service.AcademicYearLocalService academicYearLocalService) {
		this.academicYearLocalService = academicYearLocalService;
	}

	/**
	 * Returns the academic year remote service.
	 *
	 * @return the academic year remote service
	 */
	public com.service.service.AcademicYearService getAcademicYearService() {
		return academicYearService;
	}

	/**
	 * Sets the academic year remote service.
	 *
	 * @param academicYearService the academic year remote service
	 */
	public void setAcademicYearService(
		com.service.service.AcademicYearService academicYearService) {
		this.academicYearService = academicYearService;
	}

	/**
	 * Returns the academic year persistence.
	 *
	 * @return the academic year persistence
	 */
	public AcademicYearPersistence getAcademicYearPersistence() {
		return academicYearPersistence;
	}

	/**
	 * Sets the academic year persistence.
	 *
	 * @param academicYearPersistence the academic year persistence
	 */
	public void setAcademicYearPersistence(
		AcademicYearPersistence academicYearPersistence) {
		this.academicYearPersistence = academicYearPersistence;
	}

	/**
	 * Returns the students local service.
	 *
	 * @return the students local service
	 */
	public com.service.service.StudentsLocalService getStudentsLocalService() {
		return studentsLocalService;
	}

	/**
	 * Sets the students local service.
	 *
	 * @param studentsLocalService the students local service
	 */
	public void setStudentsLocalService(
		com.service.service.StudentsLocalService studentsLocalService) {
		this.studentsLocalService = studentsLocalService;
	}

	/**
	 * Returns the students remote service.
	 *
	 * @return the students remote service
	 */
	public com.service.service.StudentsService getStudentsService() {
		return studentsService;
	}

	/**
	 * Sets the students remote service.
	 *
	 * @param studentsService the students remote service
	 */
	public void setStudentsService(
		com.service.service.StudentsService studentsService) {
		this.studentsService = studentsService;
	}

	/**
	 * Returns the students persistence.
	 *
	 * @return the students persistence
	 */
	public StudentsPersistence getStudentsPersistence() {
		return studentsPersistence;
	}

	/**
	 * Sets the students persistence.
	 *
	 * @param studentsPersistence the students persistence
	 */
	public void setStudentsPersistence(StudentsPersistence studentsPersistence) {
		this.studentsPersistence = studentsPersistence;
	}

	/**
	 * Returns the subjects local service.
	 *
	 * @return the subjects local service
	 */
	public com.service.service.SubjectsLocalService getSubjectsLocalService() {
		return subjectsLocalService;
	}

	/**
	 * Sets the subjects local service.
	 *
	 * @param subjectsLocalService the subjects local service
	 */
	public void setSubjectsLocalService(
		com.service.service.SubjectsLocalService subjectsLocalService) {
		this.subjectsLocalService = subjectsLocalService;
	}

	/**
	 * Returns the subjects remote service.
	 *
	 * @return the subjects remote service
	 */
	public com.service.service.SubjectsService getSubjectsService() {
		return subjectsService;
	}

	/**
	 * Sets the subjects remote service.
	 *
	 * @param subjectsService the subjects remote service
	 */
	public void setSubjectsService(
		com.service.service.SubjectsService subjectsService) {
		this.subjectsService = subjectsService;
	}

	/**
	 * Returns the subjects persistence.
	 *
	 * @return the subjects persistence
	 */
	public SubjectsPersistence getSubjectsPersistence() {
		return subjectsPersistence;
	}

	/**
	 * Sets the subjects persistence.
	 *
	 * @param subjectsPersistence the subjects persistence
	 */
	public void setSubjectsPersistence(SubjectsPersistence subjectsPersistence) {
		this.subjectsPersistence = subjectsPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Subjects.class;
	}

	protected String getModelClassName() {
		return Subjects.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = subjectsPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.service.service.AcademicYearLocalService.class)
	protected com.service.service.AcademicYearLocalService academicYearLocalService;
	@BeanReference(type = com.service.service.AcademicYearService.class)
	protected com.service.service.AcademicYearService academicYearService;
	@BeanReference(type = AcademicYearPersistence.class)
	protected AcademicYearPersistence academicYearPersistence;
	@BeanReference(type = com.service.service.StudentsLocalService.class)
	protected com.service.service.StudentsLocalService studentsLocalService;
	@BeanReference(type = com.service.service.StudentsService.class)
	protected com.service.service.StudentsService studentsService;
	@BeanReference(type = StudentsPersistence.class)
	protected StudentsPersistence studentsPersistence;
	@BeanReference(type = com.service.service.SubjectsLocalService.class)
	protected com.service.service.SubjectsLocalService subjectsLocalService;
	@BeanReference(type = com.service.service.SubjectsService.class)
	protected com.service.service.SubjectsService subjectsService;
	@BeanReference(type = SubjectsPersistence.class)
	protected SubjectsPersistence subjectsPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private SubjectsServiceClpInvoker _clpInvoker = new SubjectsServiceClpInvoker();
}